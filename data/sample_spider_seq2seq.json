[
    {
      "db_id": "concert_singer",
      "input_sequence": "Translate the following sequence into SQL, after listing schema items and values mentioned in the utterance:我们有多少歌手？ | stadium : stadium.stadium_id , stadium.location , stadium.name , stadium.capacity , stadium.highest , stadium.lowest , stadium.average | singer : singer.singer_id , singer.name , singer.country , singer.song_name , singer.song_release_year , singer.age , singer.is_male | concert : concert.concert_id , concert.concert_name , concert.theme , concert.stadium_id , concert.year | singer_in_concert : singer_in_concert.concert_id , singer_in_concert.singer_id | concert.stadium_id = stadium.stadium_id | singer_in_concert.singer_id = singer.singer_id | singer_in_concert.concert_id = concert.concert_id",
      "output_sequence": "<table> singer <column> <none> <value> <none> <sql> select count ( * ) from singer",
      "tc_original": [
        "stadium.*",
        "stadium.stadium_id",
        "stadium.location",
        "stadium.name",
        "stadium.capacity",
        "stadium.highest",
        "stadium.lowest",
        "stadium.average",
        "singer.*",
        "singer.singer_id",
        "singer.name",
        "singer.country",
        "singer.song_name",
        "singer.song_release_year",
        "singer.age",
        "singer.is_male",
        "concert.*",
        "concert.concert_id",
        "concert.concert_name",
        "concert.theme",
        "concert.stadium_id",
        "concert.year",
        "singer_in_concert.*",
        "singer_in_concert.concert_id",
        "singer_in_concert.singer_id"
      ]
    },
    {
      "db_id": "concert_singer",
      "input_sequence": "Translate the following sequence into SQL, after listing schema items and values mentioned in the utterance:歌手的总数是多少？ | stadium : stadium.stadium_id , stadium.location , stadium.name , stadium.capacity , stadium.highest , stadium.lowest , stadium.average | singer : singer.singer_id , singer.name , singer.country , singer.song_name , singer.song_release_year , singer.age , singer.is_male | concert : concert.concert_id , concert.concert_name , concert.theme , concert.stadium_id , concert.year | singer_in_concert : singer_in_concert.concert_id , singer_in_concert.singer_id | concert.stadium_id = stadium.stadium_id | singer_in_concert.singer_id = singer.singer_id | singer_in_concert.concert_id = concert.concert_id",
      "output_sequence": "<table> singer <column> <none> <value> <none> <sql> select count ( * ) from singer",
      "tc_original": [
        "stadium.*",
        "stadium.stadium_id",
        "stadium.location",
        "stadium.name",
        "stadium.capacity",
        "stadium.highest",
        "stadium.lowest",
        "stadium.average",
        "singer.*",
        "singer.singer_id",
        "singer.name",
        "singer.country",
        "singer.song_name",
        "singer.song_release_year",
        "singer.age",
        "singer.is_male",
        "concert.*",
        "concert.concert_id",
        "concert.concert_name",
        "concert.theme",
        "concert.stadium_id",
        "concert.year",
        "singer_in_concert.*",
        "singer_in_concert.concert_id",
        "singer_in_concert.singer_id"
      ]
    },
    {
      "db_id": "concert_singer",
      "input_sequence": "Translate the following sequence into SQL, after listing schema items and values mentioned in the utterance:按歌手年龄从最大到最小，显示每个歌手的姓名、国家、年龄。 | stadium : stadium.stadium_id , stadium.location , stadium.name , stadium.capacity , stadium.highest , stadium.lowest , stadium.average | singer : singer.singer_id , singer.name , singer.country , singer.song_name , singer.song_release_year , singer.age , singer.is_male | concert : concert.concert_id , concert.concert_name , concert.theme , concert.stadium_id , concert.year | singer_in_concert : singer_in_concert.concert_id , singer_in_concert.singer_id | concert.stadium_id = stadium.stadium_id | singer_in_concert.singer_id = singer.singer_id | singer_in_concert.concert_id = concert.concert_id",
      "output_sequence": "<table> singer <column> name, country, age <value> <none> <sql> select name , country , age from singer order by age desc",
      "tc_original": [
        "stadium.*",
        "stadium.stadium_id",
        "stadium.location",
        "stadium.name",
        "stadium.capacity",
        "stadium.highest",
        "stadium.lowest",
        "stadium.average",
        "singer.*",
        "singer.singer_id",
        "singer.name",
        "singer.country",
        "singer.song_name",
        "singer.song_release_year",
        "singer.age",
        "singer.is_male",
        "concert.*",
        "concert.concert_id",
        "concert.concert_name",
        "concert.theme",
        "concert.stadium_id",
        "concert.year",
        "singer_in_concert.*",
        "singer_in_concert.concert_id",
        "singer_in_concert.singer_id"
      ]
    },
    {
      "db_id": "concert_singer",
      "input_sequence": "Translate the following sequence into SQL, after listing schema items and values mentioned in the utterance:按年龄降序，每个歌手的名字、国家、年龄是什么？ | stadium : stadium.stadium_id , stadium.location , stadium.name , stadium.capacity , stadium.highest , stadium.lowest , stadium.average | singer : singer.singer_id , singer.name , singer.country , singer.song_name , singer.song_release_year , singer.age , singer.is_male | concert : concert.concert_id , concert.concert_name , concert.theme , concert.stadium_id , concert.year | singer_in_concert : singer_in_concert.concert_id , singer_in_concert.singer_id | concert.stadium_id = stadium.stadium_id | singer_in_concert.singer_id = singer.singer_id | singer_in_concert.concert_id = concert.concert_id",
      "output_sequence": "<table> singer <column> name, country, age <value> <none> <sql> select name , country , age from singer order by age desc",
      "tc_original": [
        "stadium.*",
        "stadium.stadium_id",
        "stadium.location",
        "stadium.name",
        "stadium.capacity",
        "stadium.highest",
        "stadium.lowest",
        "stadium.average",
        "singer.*",
        "singer.singer_id",
        "singer.name",
        "singer.country",
        "singer.song_name",
        "singer.song_release_year",
        "singer.age",
        "singer.is_male",
        "concert.*",
        "concert.concert_id",
        "concert.concert_name",
        "concert.theme",
        "concert.stadium_id",
        "concert.year",
        "singer_in_concert.*",
        "singer_in_concert.concert_id",
        "singer_in_concert.singer_id"
      ]
    },
    {
      "db_id": "concert_singer",
      "input_sequence": "Translate the following sequence into SQL, after listing schema items and values mentioned in the utterance:法国所有歌手的平均年龄、最小年龄和最大年龄是多少？ | stadium : stadium.stadium_id , stadium.location , stadium.name , stadium.capacity , stadium.highest , stadium.lowest , stadium.average | singer : singer.singer_id , singer.name , singer.country , singer.song_name , singer.song_release_year , singer.age , singer.is_male | concert : concert.concert_id , concert.concert_name , concert.theme , concert.stadium_id , concert.year | singer_in_concert : singer_in_concert.concert_id , singer_in_concert.singer_id | concert.stadium_id = stadium.stadium_id | singer_in_concert.singer_id = singer.singer_id | singer_in_concert.concert_id = concert.concert_id",
      "output_sequence": "<table> singer <column> country, age <value> 法国 <sql> select avg ( age ) , min ( age ) , max ( age ) from singer where country = '法国'",
      "tc_original": [
        "stadium.*",
        "stadium.stadium_id",
        "stadium.location",
        "stadium.name",
        "stadium.capacity",
        "stadium.highest",
        "stadium.lowest",
        "stadium.average",
        "singer.*",
        "singer.singer_id",
        "singer.name",
        "singer.country",
        "singer.song_name",
        "singer.song_release_year",
        "singer.age",
        "singer.is_male",
        "concert.*",
        "concert.concert_id",
        "concert.concert_name",
        "concert.theme",
        "concert.stadium_id",
        "concert.year",
        "singer_in_concert.*",
        "singer_in_concert.concert_id",
        "singer_in_concert.singer_id"
      ]
    },
    {
      "db_id": "concert_singer",
      "input_sequence": "Translate the following sequence into SQL, after listing schema items and values mentioned in the utterance:所有法国歌手的平均年龄、最小年龄和最大年龄是多少？ | stadium : stadium.stadium_id , stadium.location , stadium.name , stadium.capacity , stadium.highest , stadium.lowest , stadium.average | singer : singer.singer_id , singer.name , singer.country , singer.song_name , singer.song_release_year , singer.age , singer.is_male | concert : concert.concert_id , concert.concert_name , concert.theme , concert.stadium_id , concert.year | singer_in_concert : singer_in_concert.concert_id , singer_in_concert.singer_id | concert.stadium_id = stadium.stadium_id | singer_in_concert.singer_id = singer.singer_id | singer_in_concert.concert_id = concert.concert_id",
      "output_sequence": "<table> singer <column> country, age <value> 法国 <sql> select avg ( age ) , min ( age ) , max ( age ) from singer where country = '法国'",
      "tc_original": [
        "stadium.*",
        "stadium.stadium_id",
        "stadium.location",
        "stadium.name",
        "stadium.capacity",
        "stadium.highest",
        "stadium.lowest",
        "stadium.average",
        "singer.*",
        "singer.singer_id",
        "singer.name",
        "singer.country",
        "singer.song_name",
        "singer.song_release_year",
        "singer.age",
        "singer.is_male",
        "concert.*",
        "concert.concert_id",
        "concert.concert_name",
        "concert.theme",
        "concert.stadium_id",
        "concert.year",
        "singer_in_concert.*",
        "singer_in_concert.concert_id",
        "singer_in_concert.singer_id"
      ]
    },
    {
      "db_id": "concert_singer",
      "input_sequence": "Translate the following sequence into SQL, after listing schema items and values mentioned in the utterance:显示最年轻歌手的歌曲的名字和发行年份。 | stadium : stadium.stadium_id , stadium.location , stadium.name , stadium.capacity , stadium.highest , stadium.lowest , stadium.average | singer : singer.singer_id , singer.name , singer.country , singer.song_name , singer.song_release_year , singer.age , singer.is_male | concert : concert.concert_id , concert.concert_name , concert.theme , concert.stadium_id , concert.year | singer_in_concert : singer_in_concert.concert_id , singer_in_concert.singer_id | concert.stadium_id = stadium.stadium_id | singer_in_concert.singer_id = singer.singer_id | singer_in_concert.concert_id = concert.concert_id",
      "output_sequence": "<table> singer <column> song_name, song_release_year, age <value> <none> <sql> select song_name , song_release_year from singer order by age asc limit 1",
      "tc_original": [
        "stadium.*",
        "stadium.stadium_id",
        "stadium.location",
        "stadium.name",
        "stadium.capacity",
        "stadium.highest",
        "stadium.lowest",
        "stadium.average",
        "singer.*",
        "singer.singer_id",
        "singer.name",
        "singer.country",
        "singer.song_name",
        "singer.song_release_year",
        "singer.age",
        "singer.is_male",
        "concert.*",
        "concert.concert_id",
        "concert.concert_name",
        "concert.theme",
        "concert.stadium_id",
        "concert.year",
        "singer_in_concert.*",
        "singer_in_concert.concert_id",
        "singer_in_concert.singer_id"
      ]
    },
    {
      "db_id": "concert_singer",
      "input_sequence": "Translate the following sequence into SQL, after listing schema items and values mentioned in the utterance:最年轻歌手的所有歌曲的名字和发行年是多少？ | stadium : stadium.stadium_id , stadium.location , stadium.name , stadium.capacity , stadium.highest , stadium.lowest , stadium.average | singer : singer.singer_id , singer.name , singer.country , singer.song_name , singer.song_release_year , singer.age , singer.is_male | concert : concert.concert_id , concert.concert_name , concert.theme , concert.stadium_id , concert.year | singer_in_concert : singer_in_concert.concert_id , singer_in_concert.singer_id | concert.stadium_id = stadium.stadium_id | singer_in_concert.singer_id = singer.singer_id | singer_in_concert.concert_id = concert.concert_id",
      "output_sequence": "<table> singer <column> song_name, song_release_year, age <value> <none> <sql> select song_name , song_release_year from singer order by age asc limit 1",
      "tc_original": [
        "stadium.*",
        "stadium.stadium_id",
        "stadium.location",
        "stadium.name",
        "stadium.capacity",
        "stadium.highest",
        "stadium.lowest",
        "stadium.average",
        "singer.*",
        "singer.singer_id",
        "singer.name",
        "singer.country",
        "singer.song_name",
        "singer.song_release_year",
        "singer.age",
        "singer.is_male",
        "concert.*",
        "concert.concert_id",
        "concert.concert_name",
        "concert.theme",
        "concert.stadium_id",
        "concert.year",
        "singer_in_concert.*",
        "singer_in_concert.concert_id",
        "singer_in_concert.singer_id"
      ]
    },
    {
      "db_id": "concert_singer",
      "input_sequence": "Translate the following sequence into SQL, after listing schema items and values mentioned in the utterance:20岁以上的歌手来自哪些不同国家？ | stadium : stadium.stadium_id , stadium.location , stadium.name , stadium.capacity , stadium.highest , stadium.lowest , stadium.average | singer : singer.singer_id , singer.name , singer.country , singer.song_name , singer.song_release_year , singer.age , singer.is_male | concert : concert.concert_id , concert.concert_name , concert.theme , concert.stadium_id , concert.year | singer_in_concert : singer_in_concert.concert_id , singer_in_concert.singer_id | concert.stadium_id = stadium.stadium_id | singer_in_concert.singer_id = singer.singer_id | singer_in_concert.concert_id = concert.concert_id",
      "output_sequence": "<table> singer <column> country, age <value> 20 <sql> select distinct country from singer where age > 20",
      "tc_original": [
        "stadium.*",
        "stadium.stadium_id",
        "stadium.location",
        "stadium.name",
        "stadium.capacity",
        "stadium.highest",
        "stadium.lowest",
        "stadium.average",
        "singer.*",
        "singer.singer_id",
        "singer.name",
        "singer.country",
        "singer.song_name",
        "singer.song_release_year",
        "singer.age",
        "singer.is_male",
        "concert.*",
        "concert.concert_id",
        "concert.concert_name",
        "concert.theme",
        "concert.stadium_id",
        "concert.year",
        "singer_in_concert.*",
        "singer_in_concert.concert_id",
        "singer_in_concert.singer_id"
      ]
    },
    {
      "db_id": "concert_singer",
      "input_sequence": "Translate the following sequence into SQL, after listing schema items and values mentioned in the utterance:哪些国家有20岁以上的歌手？ | stadium : stadium.stadium_id , stadium.location , stadium.name , stadium.capacity , stadium.highest , stadium.lowest , stadium.average | singer : singer.singer_id , singer.name , singer.country , singer.song_name , singer.song_release_year , singer.age , singer.is_male | concert : concert.concert_id , concert.concert_name , concert.theme , concert.stadium_id , concert.year | singer_in_concert : singer_in_concert.concert_id , singer_in_concert.singer_id | concert.stadium_id = stadium.stadium_id | singer_in_concert.singer_id = singer.singer_id | singer_in_concert.concert_id = concert.concert_id",
      "output_sequence": "<table> singer <column> country, age <value> 20 <sql> select distinct country from singer where age > 20",
      "tc_original": [
        "stadium.*",
        "stadium.stadium_id",
        "stadium.location",
        "stadium.name",
        "stadium.capacity",
        "stadium.highest",
        "stadium.lowest",
        "stadium.average",
        "singer.*",
        "singer.singer_id",
        "singer.name",
        "singer.country",
        "singer.song_name",
        "singer.song_release_year",
        "singer.age",
        "singer.is_male",
        "concert.*",
        "concert.concert_id",
        "concert.concert_name",
        "concert.theme",
        "concert.stadium_id",
        "concert.year",
        "singer_in_concert.*",
        "singer_in_concert.concert_id",
        "singer_in_concert.singer_id"
      ]
    },
    {
      "db_id": "concert_singer",
      "input_sequence": "Translate the following sequence into SQL, after listing schema items and values mentioned in the utterance:显示所有不同国家和每个国家的歌手数量。 | stadium : stadium.stadium_id , stadium.location , stadium.name , stadium.capacity , stadium.highest , stadium.lowest , stadium.average | singer : singer.singer_id , singer.name , singer.country , singer.song_name , singer.song_release_year , singer.age , singer.is_male | concert : concert.concert_id , concert.concert_name , concert.theme , concert.stadium_id , concert.year | singer_in_concert : singer_in_concert.concert_id , singer_in_concert.singer_id | concert.stadium_id = stadium.stadium_id | singer_in_concert.singer_id = singer.singer_id | singer_in_concert.concert_id = concert.concert_id",
      "output_sequence": "<table> singer <column> country <value> <none> <sql> select country , count ( * ) from singer group by country",
      "tc_original": [
        "stadium.*",
        "stadium.stadium_id",
        "stadium.location",
        "stadium.name",
        "stadium.capacity",
        "stadium.highest",
        "stadium.lowest",
        "stadium.average",
        "singer.*",
        "singer.singer_id",
        "singer.name",
        "singer.country",
        "singer.song_name",
        "singer.song_release_year",
        "singer.age",
        "singer.is_male",
        "concert.*",
        "concert.concert_id",
        "concert.concert_name",
        "concert.theme",
        "concert.stadium_id",
        "concert.year",
        "singer_in_concert.*",
        "singer_in_concert.concert_id",
        "singer_in_concert.singer_id"
      ]
    },
    {
      "db_id": "concert_singer",
      "input_sequence": "Translate the following sequence into SQL, after listing schema items and values mentioned in the utterance:每个国家有多少歌手？ | stadium : stadium.stadium_id , stadium.location , stadium.name , stadium.capacity , stadium.highest , stadium.lowest , stadium.average | singer : singer.singer_id , singer.name , singer.country , singer.song_name , singer.song_release_year , singer.age , singer.is_male | concert : concert.concert_id , concert.concert_name , concert.theme , concert.stadium_id , concert.year | singer_in_concert : singer_in_concert.concert_id , singer_in_concert.singer_id | concert.stadium_id = stadium.stadium_id | singer_in_concert.singer_id = singer.singer_id | singer_in_concert.concert_id = concert.concert_id",
      "output_sequence": "<table> singer <column> country <value> <none> <sql> select country , count ( * ) from singer group by country",
      "tc_original": [
        "stadium.*",
        "stadium.stadium_id",
        "stadium.location",
        "stadium.name",
        "stadium.capacity",
        "stadium.highest",
        "stadium.lowest",
        "stadium.average",
        "singer.*",
        "singer.singer_id",
        "singer.name",
        "singer.country",
        "singer.song_name",
        "singer.song_release_year",
        "singer.age",
        "singer.is_male",
        "concert.*",
        "concert.concert_id",
        "concert.concert_name",
        "concert.theme",
        "concert.stadium_id",
        "concert.year",
        "singer_in_concert.*",
        "singer_in_concert.concert_id",
        "singer_in_concert.singer_id"
      ]
    },
    {
      "db_id": "concert_singer",
      "input_sequence": "Translate the following sequence into SQL, after listing schema items and values mentioned in the utterance:列出高于平均年龄的歌手的所有歌名。 | stadium : stadium.stadium_id , stadium.location , stadium.name , stadium.capacity , stadium.highest , stadium.lowest , stadium.average | singer : singer.singer_id , singer.name , singer.country , singer.song_name , singer.song_release_year , singer.age , singer.is_male | concert : concert.concert_id , concert.concert_name , concert.theme , concert.stadium_id , concert.year | singer_in_concert : singer_in_concert.concert_id , singer_in_concert.singer_id | concert.stadium_id = stadium.stadium_id | singer_in_concert.singer_id = singer.singer_id | singer_in_concert.concert_id = concert.concert_id",
      "output_sequence": "<table> singer <column> song_name, age <value> <none> <sql> select song_name from singer where age > ( select avg ( age ) from singer )",
      "tc_original": [
        "stadium.*",
        "stadium.stadium_id",
        "stadium.location",
        "stadium.name",
        "stadium.capacity",
        "stadium.highest",
        "stadium.lowest",
        "stadium.average",
        "singer.*",
        "singer.singer_id",
        "singer.name",
        "singer.country",
        "singer.song_name",
        "singer.song_release_year",
        "singer.age",
        "singer.is_male",
        "concert.*",
        "concert.concert_id",
        "concert.concert_name",
        "concert.theme",
        "concert.stadium_id",
        "concert.year",
        "singer_in_concert.*",
        "singer_in_concert.concert_id",
        "singer_in_concert.singer_id"
      ]
    },
    {
      "db_id": "concert_singer",
      "input_sequence": "Translate the following sequence into SQL, after listing schema items and values mentioned in the utterance:年龄高于平均年龄的歌手的所有歌名有哪些? | stadium : stadium.stadium_id , stadium.location , stadium.name , stadium.capacity , stadium.highest , stadium.lowest , stadium.average | singer : singer.singer_id , singer.name , singer.country , singer.song_name , singer.song_release_year , singer.age , singer.is_male | concert : concert.concert_id , concert.concert_name , concert.theme , concert.stadium_id , concert.year | singer_in_concert : singer_in_concert.concert_id , singer_in_concert.singer_id | concert.stadium_id = stadium.stadium_id | singer_in_concert.singer_id = singer.singer_id | singer_in_concert.concert_id = concert.concert_id",
      "output_sequence": "<table> singer <column> song_name, age <value> <none> <sql> select song_name from singer where age > ( select avg ( age ) from singer )",
      "tc_original": [
        "stadium.*",
        "stadium.stadium_id",
        "stadium.location",
        "stadium.name",
        "stadium.capacity",
        "stadium.highest",
        "stadium.lowest",
        "stadium.average",
        "singer.*",
        "singer.singer_id",
        "singer.name",
        "singer.country",
        "singer.song_name",
        "singer.song_release_year",
        "singer.age",
        "singer.is_male",
        "concert.*",
        "concert.concert_id",
        "concert.concert_name",
        "concert.theme",
        "concert.stadium_id",
        "concert.year",
        "singer_in_concert.*",
        "singer_in_concert.concert_id",
        "singer_in_concert.singer_id"
      ]
    },
    {
      "db_id": "concert_singer",
      "input_sequence": "Translate the following sequence into SQL, after listing schema items and values mentioned in the utterance:显示容量在5000到10000之间的所有体育场馆的位置和名称。 | stadium : stadium.stadium_id , stadium.location , stadium.name , stadium.capacity , stadium.highest , stadium.lowest , stadium.average | singer : singer.singer_id , singer.name , singer.country , singer.song_name , singer.song_release_year , singer.age , singer.is_male | concert : concert.concert_id , concert.concert_name , concert.theme , concert.stadium_id , concert.year | singer_in_concert : singer_in_concert.concert_id , singer_in_concert.singer_id | concert.stadium_id = stadium.stadium_id | singer_in_concert.singer_id = singer.singer_id | singer_in_concert.concert_id = concert.concert_id",
      "output_sequence": "<table> stadium <column> location, name, capacity <value> 5000, 10000 <sql> select location , name from stadium where capacity between 5000 and 10000",
      "tc_original": [
        "stadium.*",
        "stadium.stadium_id",
        "stadium.location",
        "stadium.name",
        "stadium.capacity",
        "stadium.highest",
        "stadium.lowest",
        "stadium.average",
        "singer.*",
        "singer.singer_id",
        "singer.name",
        "singer.country",
        "singer.song_name",
        "singer.song_release_year",
        "singer.age",
        "singer.is_male",
        "concert.*",
        "concert.concert_id",
        "concert.concert_name",
        "concert.theme",
        "concert.stadium_id",
        "concert.year",
        "singer_in_concert.*",
        "singer_in_concert.concert_id",
        "singer_in_concert.singer_id"
      ]
    },
    {
      "db_id": "concert_singer",
      "input_sequence": "Translate the following sequence into SQL, after listing schema items and values mentioned in the utterance:容量在5000到10000之间的所有体育场的位置和名称是什么？ | stadium : stadium.stadium_id , stadium.location , stadium.name , stadium.capacity , stadium.highest , stadium.lowest , stadium.average | singer : singer.singer_id , singer.name , singer.country , singer.song_name , singer.song_release_year , singer.age , singer.is_male | concert : concert.concert_id , concert.concert_name , concert.theme , concert.stadium_id , concert.year | singer_in_concert : singer_in_concert.concert_id , singer_in_concert.singer_id | concert.stadium_id = stadium.stadium_id | singer_in_concert.singer_id = singer.singer_id | singer_in_concert.concert_id = concert.concert_id",
      "output_sequence": "<table> stadium <column> location, name, capacity <value> 5000, 10000 <sql> select location , name from stadium where capacity between 5000 and 10000",
      "tc_original": [
        "stadium.*",
        "stadium.stadium_id",
        "stadium.location",
        "stadium.name",
        "stadium.capacity",
        "stadium.highest",
        "stadium.lowest",
        "stadium.average",
        "singer.*",
        "singer.singer_id",
        "singer.name",
        "singer.country",
        "singer.song_name",
        "singer.song_release_year",
        "singer.age",
        "singer.is_male",
        "concert.*",
        "concert.concert_id",
        "concert.concert_name",
        "concert.theme",
        "concert.stadium_id",
        "concert.year",
        "singer_in_concert.*",
        "singer_in_concert.concert_id",
        "singer_in_concert.singer_id"
      ]
    },
    {
      "db_id": "concert_singer",
      "input_sequence": "Translate the following sequence into SQL, after listing schema items and values mentioned in the utterance:所有体育场的平均容量和最大容量是多少？ | stadium : stadium.stadium_id , stadium.location , stadium.name , stadium.capacity , stadium.highest , stadium.lowest , stadium.average | singer : singer.singer_id , singer.name , singer.country , singer.song_name , singer.song_release_year , singer.age , singer.is_male | concert : concert.concert_id , concert.concert_name , concert.theme , concert.stadium_id , concert.year | singer_in_concert : singer_in_concert.concert_id , singer_in_concert.singer_id | concert.stadium_id = stadium.stadium_id | singer_in_concert.singer_id = singer.singer_id | singer_in_concert.concert_id = concert.concert_id",
      "output_sequence": "<table> stadium <column> capacity <value> <none> <sql> select avg ( capacity ) , max ( capacity ) from stadium",
      "tc_original": [
        "stadium.*",
        "stadium.stadium_id",
        "stadium.location",
        "stadium.name",
        "stadium.capacity",
        "stadium.highest",
        "stadium.lowest",
        "stadium.average",
        "singer.*",
        "singer.singer_id",
        "singer.name",
        "singer.country",
        "singer.song_name",
        "singer.song_release_year",
        "singer.age",
        "singer.is_male",
        "concert.*",
        "concert.concert_id",
        "concert.concert_name",
        "concert.theme",
        "concert.stadium_id",
        "concert.year",
        "singer_in_concert.*",
        "singer_in_concert.concert_id",
        "singer_in_concert.singer_id"
      ]
    },
    {
      "db_id": "concert_singer",
      "input_sequence": "Translate the following sequence into SQL, after listing schema items and values mentioned in the utterance:所有体育场的平均容量和最大容量是多少？ | stadium : stadium.stadium_id , stadium.location , stadium.name , stadium.capacity , stadium.highest , stadium.lowest , stadium.average | singer : singer.singer_id , singer.name , singer.country , singer.song_name , singer.song_release_year , singer.age , singer.is_male | concert : concert.concert_id , concert.concert_name , concert.theme , concert.stadium_id , concert.year | singer_in_concert : singer_in_concert.concert_id , singer_in_concert.singer_id | concert.stadium_id = stadium.stadium_id | singer_in_concert.singer_id = singer.singer_id | singer_in_concert.concert_id = concert.concert_id",
      "output_sequence": "<table> stadium <column> capacity <value> <none> <sql> select avg ( capacity ) , max ( capacity ) from stadium",
      "tc_original": [
        "stadium.*",
        "stadium.stadium_id",
        "stadium.location",
        "stadium.name",
        "stadium.capacity",
        "stadium.highest",
        "stadium.lowest",
        "stadium.average",
        "singer.*",
        "singer.singer_id",
        "singer.name",
        "singer.country",
        "singer.song_name",
        "singer.song_release_year",
        "singer.age",
        "singer.is_male",
        "concert.*",
        "concert.concert_id",
        "concert.concert_name",
        "concert.theme",
        "concert.stadium_id",
        "concert.year",
        "singer_in_concert.*",
        "singer_in_concert.concert_id",
        "singer_in_concert.singer_id"
      ]
    },
    {
      "db_id": "concert_singer",
      "input_sequence": "Translate the following sequence into SQL, after listing schema items and values mentioned in the utterance:平均到场率最高的体育场名称和容量是多少？ | stadium : stadium.stadium_id , stadium.location , stadium.name , stadium.capacity , stadium.highest , stadium.lowest , stadium.average | singer : singer.singer_id , singer.name , singer.country , singer.song_name , singer.song_release_year , singer.age , singer.is_male | concert : concert.concert_id , concert.concert_name , concert.theme , concert.stadium_id , concert.year | singer_in_concert : singer_in_concert.concert_id , singer_in_concert.singer_id | concert.stadium_id = stadium.stadium_id | singer_in_concert.singer_id = singer.singer_id | singer_in_concert.concert_id = concert.concert_id",
      "output_sequence": "<table> stadium <column> name, capacity, average <value> <none> <sql> select name , capacity from stadium order by average desc limit 1",
      "tc_original": [
        "stadium.*",
        "stadium.stadium_id",
        "stadium.location",
        "stadium.name",
        "stadium.capacity",
        "stadium.highest",
        "stadium.lowest",
        "stadium.average",
        "singer.*",
        "singer.singer_id",
        "singer.name",
        "singer.country",
        "singer.song_name",
        "singer.song_release_year",
        "singer.age",
        "singer.is_male",
        "concert.*",
        "concert.concert_id",
        "concert.concert_name",
        "concert.theme",
        "concert.stadium_id",
        "concert.year",
        "singer_in_concert.*",
        "singer_in_concert.concert_id",
        "singer_in_concert.singer_id"
      ]
    },
    {
      "db_id": "concert_singer",
      "input_sequence": "Translate the following sequence into SQL, after listing schema items and values mentioned in the utterance:平均到场率最高的体育场的名称是什么，有多少容量？ | stadium : stadium.stadium_id , stadium.location , stadium.name , stadium.capacity , stadium.highest , stadium.lowest , stadium.average | singer : singer.singer_id , singer.name , singer.country , singer.song_name , singer.song_release_year , singer.age , singer.is_male | concert : concert.concert_id , concert.concert_name , concert.theme , concert.stadium_id , concert.year | singer_in_concert : singer_in_concert.concert_id , singer_in_concert.singer_id | concert.stadium_id = stadium.stadium_id | singer_in_concert.singer_id = singer.singer_id | singer_in_concert.concert_id = concert.concert_id",
      "output_sequence": "<table> stadium <column> name, capacity, average <value> <none> <sql> select name , capacity from stadium order by average desc limit 1",
      "tc_original": [
        "stadium.*",
        "stadium.stadium_id",
        "stadium.location",
        "stadium.name",
        "stadium.capacity",
        "stadium.highest",
        "stadium.lowest",
        "stadium.average",
        "singer.*",
        "singer.singer_id",
        "singer.name",
        "singer.country",
        "singer.song_name",
        "singer.song_release_year",
        "singer.age",
        "singer.is_male",
        "concert.*",
        "concert.concert_id",
        "concert.concert_name",
        "concert.theme",
        "concert.stadium_id",
        "concert.year",
        "singer_in_concert.*",
        "singer_in_concert.concert_id",
        "singer_in_concert.singer_id"
      ]
    },
    {
      "db_id": "concert_singer",
      "input_sequence": "Translate the following sequence into SQL, after listing schema items and values mentioned in the utterance:2014或2015年有多少演唱会？ | stadium : stadium.stadium_id , stadium.location , stadium.name , stadium.capacity , stadium.highest , stadium.lowest , stadium.average | singer : singer.singer_id , singer.name , singer.country , singer.song_name , singer.song_release_year , singer.age , singer.is_male | concert : concert.concert_id , concert.concert_name , concert.theme , concert.stadium_id , concert.year | singer_in_concert : singer_in_concert.concert_id , singer_in_concert.singer_id | concert.stadium_id = stadium.stadium_id | singer_in_concert.singer_id = singer.singer_id | singer_in_concert.concert_id = concert.concert_id",
      "output_sequence": "<table> concert <column> year <value> 2014, 2015 <sql> select count ( * ) from concert where year = 2014 or year = 2015",
      "tc_original": [
        "stadium.*",
        "stadium.stadium_id",
        "stadium.location",
        "stadium.name",
        "stadium.capacity",
        "stadium.highest",
        "stadium.lowest",
        "stadium.average",
        "singer.*",
        "singer.singer_id",
        "singer.name",
        "singer.country",
        "singer.song_name",
        "singer.song_release_year",
        "singer.age",
        "singer.is_male",
        "concert.*",
        "concert.concert_id",
        "concert.concert_name",
        "concert.theme",
        "concert.stadium_id",
        "concert.year",
        "singer_in_concert.*",
        "singer_in_concert.concert_id",
        "singer_in_concert.singer_id"
      ]
    },
    {
      "db_id": "concert_singer",
      "input_sequence": "Translate the following sequence into SQL, after listing schema items and values mentioned in the utterance:有多少演唱会在2014或2015年？ | stadium : stadium.stadium_id , stadium.location , stadium.name , stadium.capacity , stadium.highest , stadium.lowest , stadium.average | singer : singer.singer_id , singer.name , singer.country , singer.song_name , singer.song_release_year , singer.age , singer.is_male | concert : concert.concert_id , concert.concert_name , concert.theme , concert.stadium_id , concert.year | singer_in_concert : singer_in_concert.concert_id , singer_in_concert.singer_id | concert.stadium_id = stadium.stadium_id | singer_in_concert.singer_id = singer.singer_id | singer_in_concert.concert_id = concert.concert_id",
      "output_sequence": "<table> concert <column> year <value> 2014, 2015 <sql> select count ( * ) from concert where year = 2014 or year = 2015",
      "tc_original": [
        "stadium.*",
        "stadium.stadium_id",
        "stadium.location",
        "stadium.name",
        "stadium.capacity",
        "stadium.highest",
        "stadium.lowest",
        "stadium.average",
        "singer.*",
        "singer.singer_id",
        "singer.name",
        "singer.country",
        "singer.song_name",
        "singer.song_release_year",
        "singer.age",
        "singer.is_male",
        "concert.*",
        "concert.concert_id",
        "concert.concert_name",
        "concert.theme",
        "concert.stadium_id",
        "concert.year",
        "singer_in_concert.*",
        "singer_in_concert.concert_id",
        "singer_in_concert.singer_id"
      ]
    },
    {
      "db_id": "concert_singer",
      "input_sequence": "Translate the following sequence into SQL, after listing schema items and values mentioned in the utterance:显示体育场的名称和每个体育场举办音乐会的数量。 | stadium : stadium.stadium_id , stadium.location , stadium.name , stadium.capacity , stadium.highest , stadium.lowest , stadium.average | singer : singer.singer_id , singer.name , singer.country , singer.song_name , singer.song_release_year , singer.age , singer.is_male | concert : concert.concert_id , concert.concert_name , concert.theme , concert.stadium_id , concert.year | singer_in_concert : singer_in_concert.concert_id , singer_in_concert.singer_id | concert.stadium_id = stadium.stadium_id | singer_in_concert.singer_id = singer.singer_id | singer_in_concert.concert_id = concert.concert_id",
      "output_sequence": "<table> stadium, concert <column> stadium_id, name, stadium_id <value> <none> <sql> select stadium.name , count ( * ) from concert join stadium on concert.stadium_id = stadium.stadium_id group by concert.stadium_id",
      "tc_original": [
        "stadium.*",
        "stadium.stadium_id",
        "stadium.location",
        "stadium.name",
        "stadium.capacity",
        "stadium.highest",
        "stadium.lowest",
        "stadium.average",
        "singer.*",
        "singer.singer_id",
        "singer.name",
        "singer.country",
        "singer.song_name",
        "singer.song_release_year",
        "singer.age",
        "singer.is_male",
        "concert.*",
        "concert.concert_id",
        "concert.concert_name",
        "concert.theme",
        "concert.stadium_id",
        "concert.year",
        "singer_in_concert.*",
        "singer_in_concert.concert_id",
        "singer_in_concert.singer_id"
      ]
    }
]
  